pipeline {
    agent any
    stages {

        stage('Lint HTML') {
            steps {
                sh 'tidy -q -e deploy_containers/index.html'
            }
        }
        stage('Build Docker Image') {
            steps {
                withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'DockerHub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD']]) {
                    sh '''
                        sudo docker build -t jerrykiz/capstone https://github.com/jerrykizilos/Cloud-DevOps-Engineer-Capstone-Project.git#master:deploy_containers
                    '''
                }
            }
        }

        stage('Push Image') {
            steps {
                withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'DockerHub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD']]){
                    sh '''
                      sudo docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
                      sudo docker push jerrykiz/capstone
                    '''
                }
            }
        }
        stage('Set current kubectl context') {
            steps {
                withAWS(region:'us-east-1', credentials:'AWSCredentials') {
                    sh '''
                      kubectl config use-context arn
                    '''
                }
            }
        }

        stage('Deploy blue') {
            steps {
                withAWS(region:'us-east-1', credentials:'AWSCredentials') {
                    sh '''
                      kubectl apply -f ./deploy_containers/blue-controller.json
                    '''
                }
            }
        }

        stage('Deploy green') {
            steps {
                withAWS(region:'us-east-1', credentials:'AWSCredentials') {
                    sh '''
                      kubectl apply -f ./deploy_containers/green-controller.json
                    '''
                }
            }
        }

        stage('Create blue service') {
            steps {
                withAWS(region:'us-east-1', credentials:'AWSCredentials') {
                    sh '''
                      kubectl apply -f ./deploy_containers/blue-service.json
                    '''
                }
            }
        }
       
    }
}